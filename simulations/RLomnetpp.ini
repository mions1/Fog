[General]
network = CloudDataCenterTS
#cpu-time-limit = 60s
cmdenv-config-name = MGnDanailo
tkenv-default-config = MGnDanailo
repeat = 5
sim-time-limit = 3600s
#debug-on-errors = true
# parameters of the simulation
[Config MGnBase]
# delay
description = "Global scenario"
CloudDataCenterTS.appProc[*].delay[*].delay=exponential(0.1s)
CloudDataCenterTS.appProc[*].delay[*].maxDelay=-1s
CloudDataCenterTS.appProc[*].congCtl[*].toCongestionStatusInterval = exponential (30s) 
CloudDataCenterTS.appProc[*].congCtl[*].fromCongestionStatusInterval = exponential (10s) 
CloudDataCenterTS.appProc[*].congCtl[*].congestionMultiplier = 1.3

[Config MGnDanailo]
extends=MGnBase
# Danilo-specific config parameters
description = "Configuration based on the output of the optimization task"
CloudDataCenterTS.nApps=3
# *** App 0 ***
CloudDataCenterTS.appProc[0].nServers=10 #numero di serve a servizio dell'app 0
# request generation for request App 0
CloudDataCenterTS.appProc[0].source.sendInterval=exponential(.1)*1s # interarrivo esponenziale con media 0.1s
CloudDataCenterTS.appProc[0].source.maxInterval=-1s # nessun upper bound sul tempo di interarrivo
# request processing
CloudDataCenterTS.appProc[0].server[*].serviceTime=lognormal(0.8, 0.1)*1s # tempo di servizio lornormal, mean=0.8, stddev=0.1
CloudDataCenterTS.appProc[0].server[*].maxServiceTime=3s # upper bound sul tempo di servizio
CloudDataCenterTS.appProc[0].server[*].capacity=10 # dimensione massima della coda
CloudDataCenterTS.appProc[0].delay[*].delay=exponential(0.1s)
CloudDataCenterTS.appProc[0].delay[*].maxDelay=-1s

# *** App 1 ***
CloudDataCenterTS.appProc[1].nServers=5
# request generation for request App 0
CloudDataCenterTS.appProc[1].source.sendInterval=exponential(.2)*1s
CloudDataCenterTS.appProc[1].source.maxInterval=-1s
# request processing
CloudDataCenterTS.appProc[1].server[*].serviceTime= lognormal(0.5, 0.4)*1s
CloudDataCenterTS.appProc[1].server[*].maxServiceTime=10s
CloudDataCenterTS.appProc[1].server[*].capacity=10
CloudDataCenterTS.appProc[1].delay[*].delay=exponential(0.1s)
CloudDataCenterTS.appProc[1].delay[*].maxDelay=-1s

# *** App 2 ***
CloudDataCenterTS.appProc[2].nServers=100
# request generation for request App 0
CloudDataCenterTS.appProc[2].source.sendInterval=exponential(.02)*1s
CloudDataCenterTS.appProc[2].source.maxInterval=-1s
# request processing
CloudDataCenterTS.appProc[2].server[*].serviceTime=lognormal(1, 0.8)*1s
CloudDataCenterTS.appProc[2].server[*].maxServiceTime=20s
CloudDataCenterTS.appProc[2].server[*].capacity=50
CloudDataCenterTS.appProc[2].delay[*].delay=exponential(0.1s)
CloudDataCenterTS.appProc[2].delay[*].maxDelay=-1s



# end