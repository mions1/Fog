//
// Generated file, do not edit! Created by nedtool 5.4 from LoadUpdate.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __FOG_LOADUPDATE_M_H
#define __FOG_LOADUPDATE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace fog {

/**
 * Class generated from <tt>LoadUpdate.msg:22</tt> by nedtool.
 * <pre>
 * message loadUpdate
 * {
 *     double busy;					//Status load 0->idle, 1-> busy, >1 with queue
 *     int queueFull;						//1 if queue is full
 * }
 * </pre>
 */
class LoadUpdate : public ::omnetpp::cMessage
{
  protected:
    double busy;
    int queueFull;

  private:
    void copy(const LoadUpdate& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const LoadUpdate&);

  public:
    LoadUpdate(const char *name=nullptr, short kind=0);
    LoadUpdate(const LoadUpdate& other);
    virtual ~LoadUpdate();
    LoadUpdate& operator=(const LoadUpdate& other);
    virtual LoadUpdate *dup() const override {return new LoadUpdate(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual double getBusy() const;
    virtual void setBusy(double busy);
    virtual int getQueueFull() const;
    virtual void setQueueFull(int queueFull);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const LoadUpdate& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, LoadUpdate& obj) {obj.parsimUnpack(b);}

} // namespace fog

#endif // ifndef __FOG_LOADUPDATE_M_H

