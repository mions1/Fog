//
// Generated file, do not edit! Created by nedtool 5.4 from CloudCongestionUpdate.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __FOG_CLOUDCONGESTIONUPDATE_M_H
#define __FOG_CLOUDCONGESTIONUPDATE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace fog {

/**
 * Class generated from <tt>CloudCongestionUpdate.msg:18</tt> by nedtool.
 * <pre>
 * //
 * // CloudCongestionUpdate message definition for M/G/n simulations
 * //
 * message CloudCongestionUpdate
 * {
 *     //\@customize(true);
 *     bool congestion;			// Congestion status: true or false
 *     double multiplier;			// multiplier for service/delay time
 * }
 * </pre>
 */
class CloudCongestionUpdate : public ::omnetpp::cMessage
{
  protected:
    bool congestion;
    double multiplier;

  private:
    void copy(const CloudCongestionUpdate& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const CloudCongestionUpdate&);

  public:
    CloudCongestionUpdate(const char *name=nullptr, short kind=0);
    CloudCongestionUpdate(const CloudCongestionUpdate& other);
    virtual ~CloudCongestionUpdate();
    CloudCongestionUpdate& operator=(const CloudCongestionUpdate& other);
    virtual CloudCongestionUpdate *dup() const override {return new CloudCongestionUpdate(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual bool getCongestion() const;
    virtual void setCongestion(bool congestion);
    virtual double getMultiplier() const;
    virtual void setMultiplier(double multiplier);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const CloudCongestionUpdate& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, CloudCongestionUpdate& obj) {obj.parsimUnpack(b);}

} // namespace fog

#endif // ifndef __FOG_CLOUDCONGESTIONUPDATE_M_H

